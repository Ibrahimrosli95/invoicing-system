name: Test Matrix

on:
  schedule:
    - cron: '0 2 * * *' # Run daily at 2 AM UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  test-matrix:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3']
        laravel-version: ['11.*']
        dependency-version: [prefer-lowest, prefer-stable]
        include:
          - php-version: 8.3
            laravel-version: '11.*'
            dependency-version: prefer-stable
            coverage: true
    
    name: PHP ${{ matrix.php-version }} - Laravel ${{ matrix.laravel-version }} - ${{ matrix.dependency-version }}
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: sales_system_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: pdo, pdo_mysql, mbstring, xml, ctype, json, openssl, zip, dom, redis
        coverage: ${{ matrix.coverage && 'xdebug' || 'none' }}
    
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php${{ matrix.php-version }}-${{ matrix.dependency-version }}-${{ hashFiles('**/composer.lock') }}
    
    - name: Install Composer dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel-version }}" --no-interaction --no-update
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction
    
    - name: Create database
      run: mysql -h127.0.0.1 -uroot -proot_password -e "CREATE DATABASE IF NOT EXISTS sales_system_test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    
    - name: Copy environment file
      run: cp .env.example .env
    
    - name: Set test environment
      run: |
        sed -i 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
        sed -i 's/# DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/# DB_PORT=3306/DB_PORT=3306/' .env
        sed -i 's/# DB_DATABASE=laravel/DB_DATABASE=sales_system_test/' .env
        sed -i 's/# DB_USERNAME=root/DB_USERNAME=root/' .env
        sed -i 's/# DB_PASSWORD=/DB_PASSWORD=root_password/' .env
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Run migrations
      run: php artisan migrate --force
    
    - name: Run tests
      run: php artisan test ${{ matrix.coverage && '--coverage' || '' }}
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: sales_system_test
        DB_USERNAME: root
        DB_PASSWORD: root_password
    
    - name: Upload coverage to Codecov
      if: matrix.coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false